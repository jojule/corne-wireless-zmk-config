/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#undef MOVE_UP 
#undef MOVE_DOWN 
#undef MOVE_LEFT 
#undef MOVE_RIGHT

#define MOVE_UP MOVE_VERT(-4000)
#define MOVE_DOWN MOVE_VERT(4000)
#define MOVE_LEFT MOVE_HOR(-4000)
#define MOVE_RIGHT MOVE_HOR(4000)

#undef SCROLL_UP 
#undef SCROLL_DOWN

#define SCROLL_UP SCROLL_VERT(40)
#define SCROLL_DOWN SCROLL_VERT(-40)
#define NAV_LAYER 1
#define SYM_LAYER 2
#define SYSTEM_LAYER 3

&mt {
    tapping-term-ms = <200>;
    quick_tap_ms = <0>;
    flavor = "tap-preferred";
};

&mmv {
    acceleration-exponent = <2>;
    time-to-max-speed-ms = <1500>;
};

&mwh {
    acceleration-exponent = <2>;
    time-to-max-speed-ms = <1500>;
};

/ {
    behaviors {
        ht: holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_HOLD_TAPS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "balanced";
            global-quick-tap;
            quick-tap-ms = <0>;
            bindings =
                <&kp>,
                <&kp>;
        };
    };

    macros {
    };

    combos {
        compatible = "zmk,combos";

        combo_mo1 {
            timeout-ms = <50>;
            key-positions = <39 40>;
            bindings = <&mo 3>;
        };

        backspace_combo {
            bindings = <&kp BACKSPACE>;
            key-positions = <22 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &kp Q       &kp W          &kp E             &kp R               &kp T          &kp Y            &kp U          &kp I       &kp O          &kp P   &none
&none  &mt LGUI A  &mt LALT S    &mt LCTRL D       &mt LSHFT F               &kp G          &kp H      &mt LSHFT J    &mt LCTRL K  &mt LALT L  &mt LGUI SEMI  &trans
&none       &kp Z       &kp X   &mt K_COPY C     &mt K_PASTE V               &kp B          &kp N            &kp M      &kp COMMA     &kp DOT       &kp FSLH   &none
                               &ht LCTRL ESC  &ht LEFT_ALT TAB  &ht LEFT_GUI ENTER    &lt 1 SPACE  &lt 2 BACKSPACE  &ht LCTRL DEL
            >;
        };

        nav_layer {
            bindings = <
&none   &kp TILDE  &kp GRAVE   &kp PIPE   &kp BSLH                              &none    &mwh SCROLL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&none  &caps_word      &none  &mkp RCLK  &mkp LCLK  &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS      &mwh SCROLL_UP        &kp LEFT        &kp DOWN        &kp UP        &kp RIGHT  &none
&none   &kp LSHFT   &kp LBRC   &kp LBKT   &kp RBKT                           &kp RBRC         &kp LG(TAB)        &kp HOME       &kp PG_DN     &kp PG_UP    &ht RSHFT END  &none
                                 &trans     &trans                             &trans              &trans          &trans          &trans
            >;
        };

        sym_layer {
            bindings = <
&none         &kp N1     &kp N2     &kp N3    &kp N4     &kp N5       &kp N6    &kp N7           &kp N8    &kp N9    &kp N0  &none
&none       &kp EXCL     &kp AT   &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &none
&none  &ht LSHFT DOT  &kp UNDER  &kp MINUS  &kp PLUS  &kp EQUAL     &kp APOS   &kp DQT           &trans    &trans    &trans  &none
                                    &trans    &trans     &trans       &trans    &trans           &trans
            >;
        };

        system_layer {
            bindings = <
&none                &kp F1      &kp F2            &kp F3        &kp F4        &kp F5          &kp F6            &kp F7  &kp F8  &kp F9  &kp F10  &none
&none  &kp C_BRIGHTNESS_INC       &none             &none         &none         &none    &kp C_VOL_UP             &none   &none   &none    &none  &none
&none  &kp C_BRIGHTNESS_DEC  &bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &out OUT_TOG    &kp C_VOL_DN  &kp C_PLAY_PAUSE   &none   &none   &trans  &none
                                         &kp LEFT_CONTROL  &kp LEFT_ALT        &trans          &trans            &trans  &trans
            >;
        };
    };
};
